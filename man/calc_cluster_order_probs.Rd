% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AssignMutations.R
\name{calc_cluster_order_probs}
\alias{calc_cluster_order_probs}
\title{Calculate for a pair of clusters whether a has a higher CCF than b.}
\usage{
calc_cluster_order_probs(GS.data, density, mut_assignments, clusterids,
  cluster_ccfs, no.muts, no.timepoints, no.iters, no.iters.burn.in,
  no.samples = 1000)
}
\arguments{
\item{GS.data}{MCMC output with assignments and cluster locations}

\item{clusterids}{Clusterids to run through}

\item{no.muts}{The total number of mutations}

\item{no.timepoints}{Total number of samples in this dataset}

\item{no.iters}{Total number of iterations}

\item{no.iters.burn.in}{Number of iterations to use as burn-in}
}
\value{
A array multi-dimensional array with in each cell whether the column cluster has a higher CCF than the row cluster across the samples in the third dimension
}
\description{
This function calculates cluster order probabilities by obtaining mutation preferences throughout the MCMC iterations for each provided cluster
and then classifies a pair of clusters in groups: Greater than / equal (GT-EQ), less than / equal (LT-EQ), greater than (GT), less than (LT),
equal (EQ) or undertain (uncertain). These classifications are obtained by sampling pairs of SNVs from either cluster and account how often
SNV 1 is assigned a higher CCF in the preferences than SNV 2.
}
\author{
sd11
Note: This approach only works with the density based mutation assignment strategy
Should return classification of each cluster/cluster pair (row vs column):
 * GT / LT / EQ / GT-EQ / EQ-LT / uncertain / NA
}
